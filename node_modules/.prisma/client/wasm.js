
Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  NotFoundError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime
} = require('@prisma/client/runtime/wasm.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.11.0
 * Query Engine version: efd2449663b3d73d637ea1fd226bafbcf45b3102
 */
Prisma.prismaVersion = {
  client: "5.11.0",
  engine: "efd2449663b3d73d637ea1fd226bafbcf45b3102"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.NotFoundError = NotFoundError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  first_name: 'first_name',
  last_name: 'last_name',
  username: 'username',
  password: 'password',
  email: 'email',
  phone: 'phone',
  address: 'address',
  branches: 'branches',
  sex: 'sex',
  profile_photo: 'profile_photo',
  photos: 'photos',
  rate: 'rate',
  birthyear: 'birthyear',
  resetPasswordCode: 'resetPasswordCode',
  is_validated: 'is_validated',
  is_premium: 'is_premium'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  eventDate: 'eventDate',
  updatedAt: 'updatedAt',
  createdAt: 'createdAt',
  participants: 'participants',
  latitude: 'latitude',
  longitude: 'longitude',
  address: 'address',
  branch: 'branch',
  description: 'description',
  userId: 'userId'
};

exports.Prisma.EventRequestScalarFieldEnum = {
  id: 'id',
  eventId: 'eventId',
  userId: 'userId',
  senderId: 'senderId',
  status: 'status'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  text: 'text',
  image: 'image',
  senderId: 'senderId',
  receiverId: 'receiverId',
  seen: 'seen'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Event: 'Event',
  EventRequest: 'EventRequest',
  Message: 'Message'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/berkay/Desktop/ls/lets_sport_api/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ]
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "5.11.0",
  "engineVersion": "efd2449663b3d73d637ea1fd226bafbcf45b3102",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// schema.prisma\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"driverAdapters\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                    String         @id @unique @default(cuid())\n  first_name            String\n  last_name             String\n  username              String         @unique\n  password              String\n  email                 String         @unique\n  phone                 String?        @unique\n  address               String?\n  branches              Json?\n  sex                   String?\n  profile_photo         String?\n  photos                String?\n  rate                  Int?           @default(0)\n  birthyear             String?\n  resetPasswordCode     String?\n  is_validated          Boolean        @default(false)\n  is_premium            Boolean        @default(false)\n  events                Event[]\n  eventRequestsAsOwner  EventRequest[] @relation(\"EventOwner\")\n  eventRequestsAsSender EventRequest[] @relation(\"SenderUser\")\n  followers             User[]         @relation(name: \"UserToUser\")\n  follows               User[]         @relation(name: \"UserToUser\")\n}\n\nenum Branches {\n  Football\n  Volleyball\n  Basketball\n  Handball\n  Fitness\n  Athletics\n  Judo\n  Swimming\n  Wrestling\n  Taekwondo\n  Tennis\n  Karate\n  Archery\n  Boxing\n  Badminton\n  Yoga\n  MuayThai\n  Fencing\n  Aikido\n  Trekkig\n}\n\nmodel Event {\n  id           String    @id @unique @default(cuid())\n  eventDate    DateTime\n  updatedAt    DateTime? @updatedAt\n  createdAt    DateTime? @default(now())\n  participants Json?\n  owner        User      @relation(fields: [userId], references: [id])\n  latitude     String\n  longitude    String\n  address      String\n  branch       String\n  description  String?\n  userId       String\n}\n\nmodel EventRequest {\n  id         String  @id @unique @default(cuid())\n  eventOwner User?   @relation(\"EventOwner\", fields: [userId], references: [id])\n  senderUser User?   @relation(\"SenderUser\", fields: [senderId], references: [id])\n  eventId    String\n  userId     String\n  senderId   String\n  status     Boolean @default(false)\n}\n\nmodel Message {\n  id         String   @id @default(cuid())\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n  text       String?\n  image      String?\n  senderId   String\n  receiverId String\n  seen       Boolean\n}\n",
  "inlineSchemaHash": "13a57c7c10fea8d4f1bf5b6c40b7c700a956db30fe93e721376c882f1f7dfd09",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"first_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"last_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"branches\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"sex\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile_photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photos\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"birthyear\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resetPasswordCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_validated\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"is_premium\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"events\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToUser\"},{\"name\":\"eventRequestsAsOwner\",\"kind\":\"object\",\"type\":\"EventRequest\",\"relationName\":\"EventOwner\"},{\"name\":\"eventRequestsAsSender\",\"kind\":\"object\",\"type\":\"EventRequest\",\"relationName\":\"SenderUser\"},{\"name\":\"followers\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUser\"},{\"name\":\"follows\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUser\"}],\"dbName\":null},\"Event\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"participants\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EventToUser\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"branch\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"EventRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventOwner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EventOwner\"},{\"name\":\"senderUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SenderUser\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seen\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    return (await import('#wasm-engine-loader')).default
  }
}

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

