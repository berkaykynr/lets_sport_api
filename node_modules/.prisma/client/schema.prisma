// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String         @id @unique @default(cuid())
  first_name            String
  last_name             String
  username              String         @unique
  password              String
  email                 String         @unique
  phone                 String?        @unique
  address               String?
  branches              Json?
  sex                   String?
  profile_photo         String?
  photos                String?
  rate                  Int?           @default(0)
  birthyear             String?
  resetPasswordCode     String?
  is_validated          Boolean        @default(false)
  is_premium            Boolean        @default(false)
  events                Event[]
  eventRequestsAsOwner  EventRequest[] @relation("EventOwner")
  eventRequestsAsSender EventRequest[] @relation("SenderUser")
}

enum Branches {
  Football
  Volleyball
  Basketball
  Handball
  Fitness
  Athletics
  Judo
  Swimming
  Wrestling
  Taekwondo
  Tennis
  Karate
  Archery
  Boxing
  Badminton
  Yoga
  MuayThai
  Fencing
  Aikido
  Trekkig
}

model Event {
  id           String    @id @unique @default(cuid())
  eventDate    DateTime
  updatedAt    DateTime? @updatedAt
  createdAt    DateTime? @default(now())
  participants Json?
  owner        User      @relation(fields: [userId], references: [id])
  latitude     String
  longitude    String
  address      String
  branch       String
  description  String?
  userId       String
}

model EventRequest {
  id         String  @id @unique @default(cuid())
  eventOwner User?   @relation("EventOwner", fields: [userId], references: [id])
  senderUser User?   @relation("SenderUser", fields: [senderId], references: [id])
  eventId    String
  userId     String
  senderId   String
  status     Boolean @default(false)
}

model Message {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  text       String?
  image      String?
  senderId   String
  receiverId String
  seen       Boolean
}
